<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ctc.anni.dao.SubscribeMapper">
  <resultMap id="BaseResultMap" type="com.ctc.anni.bean.Subscribe">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="c_id" jdbcType="INTEGER" property="cId" />
    <result column="d_id" jdbcType="INTEGER" property="dId" />
    <result column="t_id" jdbcType="INTEGER" property="tId" />
    <result column="first" jdbcType="INTEGER" property="first" />
    <result column="subtime" jdbcType="TIMESTAMP" property="subtime" />
    <result column="rank" jdbcType="INTEGER" property="rank" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, c_id, d_id, t_id, first, subtime, rank
  </sql>
  <select id="selectByExample" parameterType="com.ctc.anni.bean.SubscribeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from subscribe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from subscribe
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from subscribe
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ctc.anni.bean.SubscribeExample">
    delete from subscribe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ctc.anni.bean.Subscribe">
    insert into subscribe (id, c_id, d_id, 
      t_id, first, subtime, 
      rank)
    values (#{id,jdbcType=INTEGER}, #{cId,jdbcType=INTEGER}, #{dId,jdbcType=INTEGER}, 
      #{tId,jdbcType=INTEGER}, #{first,jdbcType=INTEGER}, #{subtime,jdbcType=TIMESTAMP}, 
      #{rank,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ctc.anni.bean.Subscribe">
    insert into subscribe
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cId != null">
        c_id,
      </if>
      <if test="dId != null">
        d_id,
      </if>
      <if test="tId != null">
        t_id,
      </if>
      <if test="first != null">
        first,
      </if>
      <if test="subtime != null">
        subtime,
      </if>
      <if test="rank != null">
        rank,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cId != null">
        #{cId,jdbcType=INTEGER},
      </if>
      <if test="dId != null">
        #{dId,jdbcType=INTEGER},
      </if>
      <if test="tId != null">
        #{tId,jdbcType=INTEGER},
      </if>
      <if test="first != null">
        #{first,jdbcType=INTEGER},
      </if>
      <if test="subtime != null">
        #{subtime,jdbcType=TIMESTAMP},
      </if>
      <if test="rank != null">
        #{rank,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ctc.anni.bean.SubscribeExample" resultType="java.lang.Long">
    select count(*) from subscribe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update subscribe
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cId != null">
        c_id = #{record.cId,jdbcType=INTEGER},
      </if>
      <if test="record.dId != null">
        d_id = #{record.dId,jdbcType=INTEGER},
      </if>
      <if test="record.tId != null">
        t_id = #{record.tId,jdbcType=INTEGER},
      </if>
      <if test="record.first != null">
        first = #{record.first,jdbcType=INTEGER},
      </if>
      <if test="record.subtime != null">
        subtime = #{record.subtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rank != null">
        rank = #{record.rank,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update subscribe
    set id = #{record.id,jdbcType=INTEGER},
      c_id = #{record.cId,jdbcType=INTEGER},
      d_id = #{record.dId,jdbcType=INTEGER},
      t_id = #{record.tId,jdbcType=INTEGER},
      first = #{record.first,jdbcType=INTEGER},
      subtime = #{record.subtime,jdbcType=TIMESTAMP},
      rank = #{record.rank,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ctc.anni.bean.Subscribe">
    update subscribe
    <set>
      <if test="cId != null">
        c_id = #{cId,jdbcType=INTEGER},
      </if>
      <if test="dId != null">
        d_id = #{dId,jdbcType=INTEGER},
      </if>
      <if test="tId != null">
        t_id = #{tId,jdbcType=INTEGER},
      </if>
      <if test="first != null">
        first = #{first,jdbcType=INTEGER},
      </if>
      <if test="subtime != null">
        subtime = #{subtime,jdbcType=TIMESTAMP},
      </if>
      <if test="rank != null">
        rank = #{rank,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ctc.anni.bean.Subscribe">
    update subscribe
    set c_id = #{cId,jdbcType=INTEGER},
      d_id = #{dId,jdbcType=INTEGER},
      t_id = #{tId,jdbcType=INTEGER},
      first = #{first,jdbcType=INTEGER},
      subtime = #{subtime,jdbcType=TIMESTAMP},
      rank = #{rank,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>